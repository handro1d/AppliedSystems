@model NIPF.Web.Models.LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles
{
    @Styles.Render("~/Content/Styles/Components/LoginComponent.css")
}

@section Scripts
{
    @Scripts.Render("~/AngularJs/Components/as.login.js")
}

@{
    var returnUrl = !string.IsNullOrEmpty(ViewBag.ReturnUrl) || !Url.IsLocalUrl(ViewBag.ReturnUrl) ? Url.Action("Index", "Home") : ViewBag.ReturnUrl;
}

@*<h2>Login</h2>*@

<div ng-controller="AccountController">
    <as-login on-login="login(username, password, returnUrl)"
              error="{{errormessage}}"
              return-url="@returnUrl"
              registration-url="@Url.Action("Register", "Account")" />
</div>





@*<h2>Login</h2>

@using (Html.BeginForm("Login", "Account", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true);

    <table>
        <tr>
            <td>@Html.LabelFor(m => m.Email)</td>
            <td>@Html.TextBoxFor(m => m.Email)</td>
            <td>@Html.ValidationMessageFor(m => m.Email)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.Password)</td>
            <td>@Html.PasswordFor(m => m.Password)</td>
            <td>@Html.ValidationMessageFor(m => m.Password)</td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" value="Login" />
            </td>
        </tr>
    </table>
}*@
